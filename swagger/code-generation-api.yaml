openapi: 3.0.0
info:
  title: Code Generation API
  version: 1.0.0
  description: API for generating backend code files from schemas and APIs

paths:
  /code-generation/generate-backend:
    post:
      operationId: generateBackendCode
      summary: Generate complete backend code from schemas and APIs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - namespaceId
              properties:
                namespaceId:
                  type: string
                  description: The namespace ID to generate code for
                schemas:
                  type: array
                  items:
                    type: object
                  description: Array of schemas to generate models from
                apis:
                  type: array
                  items:
                    type: object
                  description: Array of APIs to generate routes from
                projectType:
                  type: string
                  enum: [nodejs, python]
                  default: nodejs
                  description: Type of project to generate
                userId:
                  type: string
                  description: User identifier for session management
      responses:
        '200':
          description: Backend code generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  files:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        name:
                          type: string
                        path:
                          type: string
                        content:
                          type: string
                  namespaceId:
                    type: string
                  projectType:
                    type: string
                  sessionId:
                    type: string
                    description: Session identifier for memory tracking
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string

  /code-generation/generate-models:
    post:
      operationId: generateModels
      summary: Generate model files from schemas
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - namespaceId
                - schemas
              properties:
                namespaceId:
                  type: string
                  description: The namespace ID
                schemas:
                  type: array
                  items:
                    type: object
                  description: Array of schemas to generate models from
                projectType:
                  type: string
                  enum: [nodejs, python]
                  default: nodejs
                  description: Type of project
      responses:
        '200':
          description: Models generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  files:
                    type: array
                    items:
                      type: object
                  namespaceId:
                    type: string
                  projectType:
                    type: string

  /code-generation/generate-routes:
    post:
      operationId: generateRoutes
      summary: Generate API route files from APIs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - namespaceId
                - apis
              properties:
                namespaceId:
                  type: string
                  description: The namespace ID
                apis:
                  type: array
                  items:
                    type: object
                  description: Array of APIs to generate routes from
                projectType:
                  type: string
                  enum: [nodejs, python]
                  default: nodejs
                  description: Type of project
      responses:
        '200':
          description: Routes generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  files:
                    type: array
                    items:
                      type: object
                  namespaceId:
                    type: string
                  projectType:
                    type: string

  /code-generation/generate-project-structure:
    post:
      operationId: generateProjectStructure
      summary: Generate project structure
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - namespaceId
              properties:
                namespaceId:
                  type: string
                  description: The namespace ID
                projectType:
                  type: string
                  enum: [nodejs, python]
                  default: nodejs
                  description: Type of project
      responses:
        '200':
          description: Project structure generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  files:
                    type: array
                    items:
                      type: string
                  namespaceId:
                    type: string
                  projectType:
                    type: string

  /code-generation/file-tree/{namespaceId}:
    get:
      operationId: getFileTree
      summary: Get file tree for a namespace
      parameters:
        - name: namespaceId
          in: path
          required: true
          schema:
            type: string
          description: The namespace ID
      responses:
        '200':
          description: File tree retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  tree:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        type:
                          type: string
                          enum: [file, folder]
                        path:
                          type: string
                        children:
                          type: array
                          items:
                            $ref: '#/components/schemas/FileNode'
                  namespaceId:
                    type: string

  /code-generation/read-file:
    post:
      operationId: readFile
      summary: Read file content
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - namespaceId
                - filePath
              properties:
                namespaceId:
                  type: string
                  description: The namespace ID
                filePath:
                  type: string
                  description: Path to the file
      responses:
        '200':
          description: File content retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  content:
                    type: string
                  path:
                    type: string
                  size:
                    type: integer
                  namespaceId:
                    type: string
        '404':
          description: File not found

  /code-generation/write-file:
    post:
      operationId: writeFile
      summary: Create or update file
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - namespaceId
                - filePath
                - content
              properties:
                namespaceId:
                  type: string
                  description: The namespace ID
                filePath:
                  type: string
                  description: Path to the file
                content:
                  type: string
                  description: File content
      responses:
        '200':
          description: File created/updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  path:
                    type: string
                  size:
                    type: integer
                  namespaceId:
                    type: string

  /code-generation/delete-file:
    post:
      operationId: deleteFile
      summary: Delete file
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - namespaceId
                - filePath
              properties:
                namespaceId:
                  type: string
                  description: The namespace ID
                filePath:
                  type: string
                  description: Path to the file
      responses:
        '200':
          description: File deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  path:
                    type: string
                  namespaceId:
                    type: string

  /code-generation/list-files:
    post:
      operationId: listFiles
      summary: List files in directory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - namespaceId
              properties:
                namespaceId:
                  type: string
                  description: The namespace ID
                dirPath:
                  type: string
                  default: ""
                  description: Directory path to list files from
      responses:
        '200':
          description: Files listed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  files:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        path:
                          type: string
                        type:
                          type: string
                          enum: [file, folder]
                        size:
                          type: integer
                        modified:
                          type: string
                          format: date-time
                        isDirectory:
                          type: boolean
                  path:
                    type: string
                  namespaceId:
                    type: string

  /code-generation/history:
    post:
      operationId: getCodeGenerationHistory
      summary: Get code generation history for a namespace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sessionId
                - namespaceId
              properties:
                sessionId:
                  type: string
                  description: Session identifier
                namespaceId:
                  type: string
                  description: Namespace identifier
                userId:
                  type: string
                  description: User identifier
      responses:
        '200':
          description: Code generation history retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  codeGenerationHistory:
                    type: array
                    items:
                      type: object
                      properties:
                        projectType:
                          type: string
                        schemas:
                          type: array
                        apis:
                          type: array
                        files:
                          type: array
                        timestamp:
                          type: string
                  sessionId:
                    type: string
                  namespaceId:
                    type: string

  /code-generation/generate-backend:
    post:
      summary: Generate backend code files for a namespace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                namespaceId:
                  type: string
                schemas:
                  type: array
                  items:
                    type: object
                apis:
                  type: array
                  items:
                    type: object
                projectType:
                  type: string
                  enum: [nodejs, python]
                  default: nodejs
                namespaceName:
                  type: string
                  default: "Generated Project"
              required:
                - namespaceId
                - schemas
                - apis
      responses:
        '200':
          description: List of generated files
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  files:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        name:
                          type: string
                        path:
                          type: string
        '400':
          description: Invalid input
        '500':
          description: Code generation failed

  /code-generation/files/{namespaceId}:
    get:
      summary: List generated files for a namespace
      parameters:
        - name: namespaceId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of files
          content:
            application/json:
              schema:
                type: object
                properties:
                  files:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        path:
                          type: string
                        type:
                          type: string
                          enum: [file, directory]
                        size:
                          type: integer
        '500':
          description: Failed to list files

  /code-generation/files/{namespaceId}/{filename}:
    get:
      summary: Read file contents
      parameters:
        - name: namespaceId
          in: path
          required: true
          schema:
            type: string
        - name: filename
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File contents
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: string
                  name:
                    type: string
                  path:
                    type: string
                  size:
                    type: integer
        '404':
          description: File not found
        '500':
          description: Failed to read file

components:
  schemas:
    FileNode:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum: [file, folder]
        path:
          type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/FileNode'
        size:
          type: integer
        modified:
          type: string
          format: date-time 