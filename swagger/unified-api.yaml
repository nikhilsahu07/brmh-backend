openapi: 3.0.0
info:
  title: Unified API
  version: 1.0.0
  description: Unified API for handling schemas, namespaces, and API execution

servers:
  - url: /unified
    description: Unified API server

paths:
  # Schema Operations
  /schema/generate:
    post:
      operationId: generateSchema
      summary: Generate schema from data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: ["data"]
              properties:
                data:
                  type: object
                  description: Data to generate schema from
      responses:
        '200':
          description: Schema generated successfully
          content:
            application/json:
              schema:
                type: object
                required: ["schema", "isArray", "originalType"]
                properties:
                  schema:
                    type: object
                  isArray:
                    type: boolean
                  originalType:
                    type: string

  /schema/validate:
    post:
      operationId: validateSchema
      summary: Validate schema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: ["schema"]  # Only require schema
              properties:
                schema:
                  type: object
                data:
                  type: object
                  nullable: true
      responses:
        '200':
          description: Schema validation result
          content:
            application/json:
              schema:
                type: object
                required: ["valid"]
                properties:
                  valid:
                    type: boolean
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        message:
                          type: string
                        instancePath:
                          type: string

  /schema:
    post:
      operationId: saveSchema
      summary: Save schema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: ["schemaName", "schema"]
              properties:
                methodId:
                  type: ["string", "null"]
                  nullable: true
                schemaName:
                  type: string
                methodName:
                  type: ["string", "null"]
                  nullable: true
                namespaceId:
                  type: ["string", "null"]
                  nullable: true
                schemaType:
                  type: ["string", "null"]
                  nullable: true
                schema:
                  type: object
                isArray:
                  type: boolean
                  default: false
                originalType:
                  type: ["string", "null"]
                  nullable: true
                url:
                  type: string
                  default: ""
      responses:
        '200':
          description: Schema saved successfully
          content:
            application/json:
              schema:
                type: object
                required: ["schemaId"]
                properties:
                  schemaId:
                    type: string

    get:
      operationId: listSchemas
      summary: List all schemas
      responses:
        '200':
          description: List of schemas
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

  /schema/{schemaId}:
    parameters:
      - name: schemaId
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: getSchema
      summary: Get schema by ID
      responses:
        '200':
          description: Schema retrieved successfully
          content:
            application/json:
              schema:
                type: object

    put:
      operationId: updateSchema
      summary: Update schema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Schema updated successfully
          content:
            application/json:
              schema:
                type: object

    delete:
      operationId: deleteSchema
      summary: Delete schema
      responses:
        '204':
          description: Schema deleted successfully

  # Table Operations
  /schema/table:
    post:
      operationId: createSchemasTable
      summary: Create schema table
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: ["schemaId", "tableName"]
              properties:
                schemaId:
                  type: string
                tableName:
                  type: string
      responses:
        '200':
          description: Table created successfully
          content:
            application/json:
              schema:
                type: object
                required: ["message", "tableName", "schemaId", "metaId"]
                properties:
                  message:
                    type: string
                  tableName:
                    type: string
                  schemaId:
                    type: string
                  metaId:
                    type: string

  /schema/table-meta:
    get:
      operationId: listSchemaTableMeta
      summary: List schema table metadata
      responses:
        '200':
          description: List of table metadata
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

  /schema/table-meta/{metaId}:
    parameters:
      - name: metaId
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: getSchemaTableMeta
      summary: Get schema table metadata
      responses:
        '200':
          description: Table metadata retrieved successfully
          content:
            application/json:
              schema:
                type: object

  /schema/table-meta/check/{metaId}:
    parameters:
      - name: metaId
        in: path
        required: true
        schema:
          type: string
    post:
      operationId: checkAndUpdateTableStatus
      summary: Check and update table status
      responses:
        '200':
          description: Table status checked and updated
          content:
            application/json:
              schema:
                type: object
                required: ["id", "tableName", "status"]
                properties:
                  id:
                    type: string
                  tableName:
                    type: string
                  status:
                    type: string

  /schema/table/{tableName}/items:
    parameters:
      - name: tableName
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: getTableItems
      summary: Get table items
      responses:
        '200':
          description: Table items retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

    post:
      operationId: createTableItem
      summary: Create a new item in the table
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: ["item"]
              properties:
                item:
                  type: object
                  description: The item to create
                requestDetails:
                  type: object
                  description: Details of the API request that generated this data
                  properties:
                    method:
                      type: string
                    url:
                      type: string
                    queryParams:
                      type: object
                    headers:
                      type: object
                    body:
                      type: object
                status:
                  type: integer
                  description: HTTP status code of the API response
                itemIndex:
                  type: integer
                  description: Index of the item in the batch
                totalItems:
                  type: integer
                  description: Total number of items in the batch
                originalId:
                  type: string
                  description: Original ID of the item from the API
      responses:
        '200':
          description: Item created successfully
          content:
            application/json:
              schema:
                type: object
                required: ["success"]
                properties:
                  success:
                    type: boolean
                  itemId:
                    type: string
                    description: ID of the created item

  # API Execution
  /execute:
    post:
      operationId: executeNamespaceRequest
      summary: Execute namespace request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: ["method", "url"]
              properties:
                method:
                  type: string
                url:
                  type: string
                queryParams:
                  type: object
                headers:
                  type: object
                body:
                  type: object
      responses:
        '200':
          description: Request executed successfully
          content:
            application/json:
              schema:
                type: object

  /execute/paginated:
    post:
      operationId: executeNamespacePaginatedRequest
      summary: Execute paginated namespace request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: ["method", "url"]
              properties:
                method:
                  type: string
                url:
                  type: string
                maxIterations:
                  type: integer
                paginationType:
                  type: string
                queryParams:
                  type: object
                headers:
                  type: object
                body:
                  type: object
      responses:
        '200':
          description: Paginated request executed successfully
          content:
            application/json:
              schema:
                type: object
                required: ["status", "metadata", "data"]
                properties:
                  status:
                    type: integer
                  metadata:
                    type: object
                  data:
                    type: array

  # Namespace Operations
  /namespaces:
    get:
      operationId: getNamespaces
      summary: Get all namespaces
      responses:
        '200':
          description: List of namespaces
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

    post:
      operationId: createNamespace
      summary: Create namespace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: ["namespace-name", "namespace-url"]
              properties:
                namespace-name:
                  type: string
                namespace-url:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Namespace created successfully
          content:
            application/json:
              schema:
                type: object

  /namespaces/{namespaceId}:
    parameters:
      - name: namespaceId
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: getNamespaceById
      summary: Get namespace by ID
      responses:
        '200':
          description: Namespace retrieved successfully
          content:
            application/json:
              schema:
                type: object

    put:
      operationId: updateNamespace
      summary: Update namespace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: ["namespace-name", "namespace-url"]
              properties:
                namespace-name:
                  type: string
                namespace-url:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Namespace updated successfully
          content:
            application/json:
              schema:
                type: object

    delete:
      operationId: deleteNamespace
      summary: Delete namespace
      responses:
        '204':
          description: Namespace deleted successfully

  # Namespace Account Operations
  /namespaces/{namespaceId}/accounts:
    parameters:
      - name: namespaceId
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: getNamespaceAccounts
      summary: Get namespace accounts
      responses:
        '200':
          description: List of namespace accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

    post:
      operationId: createNamespaceAccount
      summary: Create namespace account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: ["namespace-account-name"]
              properties:
                namespace-account-name:
                  type: string
                namespace-account-url-override:
                  type: string
                namespace-account-header:
                  type: array
                  items:
                    type: object
                variables:
                  type: array
                  items:
                    type: object
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Account created successfully
          content:
            application/json:
              schema:
                type: object

  /accounts/{accountId}:
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
    put:
      operationId: updateNamespaceAccount
      summary: Update namespace account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: ["namespace-account-name"]
              properties:
                namespace-account-name:
                  type: string
                namespace-account-url-override:
                  type: string
                namespace-account-header:
                  type: array
                  items:
                    type: object
                variables:
                  type: array
                  items:
                    type: object
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Account updated successfully
          content:
            application/json:
              schema:
                type: object

    delete:
      operationId: deleteNamespaceAccount
      summary: Delete namespace account
      responses:
        '204':
          description: Account deleted successfully

  # Namespace Method Operations
  /namespaces/{namespaceId}/methods:
    parameters:
      - name: namespaceId
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: getNamespaceMethods
      summary: Get namespace methods
      responses:
        '200':
          description: List of namespace methods
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

    post:
      operationId: createNamespaceMethod
      summary: Create namespace method
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: ["namespace-method-name", "namespace-method-type"]
              properties:
                namespace-method-name:
                  type: string
                namespace-method-type:
                  type: string
                namespace-method-url-override:
                  type: string
                namespace-method-queryParams:
                  type: array
                  items:
                    type: object
                namespace-method-header:
                  type: array
                  items:
                    type: object
                save-data:
                  type: boolean
                isInitialized:
                  type: boolean
                tags:
                  type: array
                  items:
                    type: string
                sample-request:
                  type: object
                sample-response:
                  type: object
                request-schema:
                  type: object
                response-schema:
                  type: object
                schemaId:
                  type: ["string", "null"]
                  nullable: true
                  description: Reference to the schema for this namespace or method
                  default: null
      responses:
        '200':
          description: Method created successfully
          content:
            application/json:
              schema:
                type: object

  /methods/{methodId}:
    parameters:
      - name: methodId
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: getNamespaceMethodById
      summary: Get method by ID
      responses:
        '200':
          description: Method retrieved successfully
          content:
            application/json:
              schema:
                type: object
    put:
      operationId: updateNamespaceMethod
      summary: Update namespace method
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: ["namespace-method-name", "namespace-method-type"]
              properties:
                namespace-method-name:
                  type: string
                namespace-method-type:
                  type: string
                namespace-method-url-override:
                  type: string
                namespace-method-queryParams:
                  type: array
                  items:
                    type: object
                namespace-method-header:
                  type: array
                  items:
                    type: object
                save-data:
                  type: boolean
                isInitialized:
                  type: boolean
                tags:
                  type: array
                  items:
                    type: string
                sample-request:
                  type: object
                sample-response:
                  type: object
                request-schema:
                  type: object
                response-schema:
                  type: object
                schemaId:
                  type: ["string", "null"]
                  nullable: true
                  description: Reference to the schema for this namespace or method
                  default: null
                namespace-method-tableName:
                  type: ["string", "null"]
                  nullable: true
                  description: Table name for this method
                  default: null
                tableName:
                  type: ["string", "null"]
                  nullable: true
                  description: Table name for this method (backward compatibility)
                  default: null
      responses:
        '200':
          description: Method updated successfully
          content:
            application/json:
              schema:
                type: object

    delete:
      operationId: deleteNamespaceMethod
      summary: Delete namespace method
      responses:
        '204':
          description: Method deleted successfully

  /table/create:
    post:
      operationId: createTableByName
      summary: Create a DynamoDB table by name
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [tableName]
              properties:
                tableName:
                  type: string
      responses:
        '201':
          description: Table created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  tableName:
                    type: string
        '409':
          description: Table already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /table/{tableName}/count:
    get:
      operationId: getTableItemCount
      summary: Get total number of items in a DynamoDB table
      parameters:
        - name: tableName
          in: path
          required: true
          schema:
            type: string
          description: Name of the DynamoDB table
      responses:
        '200':
          description: Successfully retrieved item count
          content:
            application/json:
              schema:
                type: object
                required: ["count"]
                properties:
                  count:
                    type: integer
                    description: Total number of items in the table
                  tableName:
                    type: string
                    description: Name of the table
        '404':
          description: Table not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string 